<!DOCTYPE html>

<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="Spotify Cover Letter"/>
  <meta name="author" content="Noah Fang"/>

  <title>Spotify Cover Letter</title>

  <!--JS-->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" type="text/javascript"></script>

  <!-- Favicon -->
  <link href="../icons/favicon.png" rel="icon">

  <style>
  html, body {                                                  
    width: 100%;
    height: 100%;
    margin: 0px;
    border: 0;
    overflow: hidden;
    display: block;
  }
  canvas {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
</style>
</head>


<body onkeydown="keyDown(event)" onkeyup="keyUp(event)" onclick="mouseClicked(event)"></body>
<canvas id="graphics" width=600 height=400 style="position:absolute;top:0;left:0;background-image:url('assets/background.png');"></canvas>

<script>
//Canvas
var gameCanvas = document.getElementById("graphics");
var g = gameCanvas.getContext('2d');

gameCanvas.width = window.innerWidth;
gameCanvas.height = window.innerHeight;
var maxWidth = gameCanvas.width;
var maxHeight = gameCanvas.height;

//Characters
var globalX = 0;
var sun = new Object("assets/Sun.png", 0, 0, 500, 500);

var factor = 0.67;
var size = 0.1*maxWidth;
var player = new Object("assets/Note.png", 0.3*maxWidth, Math.floor(factor*maxHeight) - size, size, size);
player.G = 20;
player.MG = 0.1;

//Buttons
var pageSize = 0.75*maxWidth
var wMult = 1.5;
var hMult = 0.75;
var instructions = new Object("assets/Butt1.png", 0.1*maxWidth, factor/2*maxHeight, wMult*size, hMult*size);
var website = new Object("assets/Butt2.png", 6.5*pageSize, 0.05*maxHeight, wMult*size, hMult*size);
var again = new Object("assets/Butt3.png", 6.5*pageSize, 0.05*maxHeight + size, wMult*size, hMult*size);
var wrapped = new Object("assets/Butt4.png", 6.5*pageSize, 0.05*maxHeight + 2*size, wMult*size, hMult*size);

var buttons = [
  instructions, 
  website, 
  again,
  wrapped
];

//Content
var content = [
  new Object("assets/Spotify1.png", 1*pageSize, 0, pageSize, Math.floor(factor*maxHeight)), //Noah Fang
  new Object("assets/Spotify2.png", 2*pageSize, 0, pageSize, Math.floor(factor*maxHeight)), //Music
  new Object("assets/cello.jpg", 3*pageSize, 0.05*maxHeight, 0.33*pageSize, Math.floor(factor*maxHeight) - 0.1*maxHeight), //Cello pic
  new Object("assets/Spotify3.png", 3.5*pageSize, 0, pageSize, Math.floor(factor*maxHeight)), //Coursework
  new Object("assets/Spotify4.png", 4.5*pageSize, 0, pageSize, Math.floor(factor*maxHeight)), //Previous Work
  new Object("assets/Spotify5.png", 5.5*pageSize, 0, pageSize, Math.floor(factor*maxHeight)) //About Me
];

//Blocks
var maxBlock = 6;
var block = new Array();
for(var i = 0; i < maxBlock; i++){
  block[i] = new Object("assets/block.png", i*maxWidth/maxBlock, Math.floor(factor*maxHeight), maxWidth/maxBlock, Math.floor((1 - factor)*maxHeight));
}

//Trees
var maxTree = 70;
var prevTree = Math.floor(Math.random() * 500) + 10;
var fileName = "assets/tree.png";
var tree = new Array();
for(var i = 0; i < maxTree; i++){
  if(Math.random() >= 0.5){
    filename = "assets/tree.png";
  }
  else{
    filename = "assets/tree2.png";
  }
  prevTree += Math.floor(Math.random() * 25) + 75;
  tree[i] = new Object(filename, prevTree, Math.floor(factor*maxHeight) - size, size, size);
}

//Moving
var isLeft = false;
var isRight = false;
var bigLeft = false;
var bigRight = false;

var isJump = false;

//Events
function keyDown(e){
  if(String.fromCharCode(e.keyCode) === "D"){
    isRight = true;
  }
  else if(String.fromCharCode(e.keyCode) === "A"){
    isLeft = true;
  }
  else if(String.fromCharCode(e.keyCode) === "K"){
    bigLeft = true;
  }
  else if(String.fromCharCode(e.keyCode) === "L"){
    bigRight = true;
  }
  else if(String.fromCharCode(e.keyCode) === "W"){
    isJump = true;
  }
}

function keyUp(e){
  if(String.fromCharCode(e.keyCode) == "D"){
    isRight = false;
  }
  else if(String.fromCharCode(e.keyCode) == "A"){
    isLeft = false;
  }
  else if(String.fromCharCode(e.keyCode) === "K"){
    bigLeft = false;
  }
  else if(String.fromCharCode(e.keyCode) === "L"){
    bigRight = false;
  }
  else if(String.fromCharCode(e.keyCode) === "W"){
    isJump = false;
  }
}

function isIn(obj){
  return obj.X + obj.W > 0 && obj.X < maxWidth;
}

var max = 6*pageSize;

checkMob();
main();
function main(){

  globalX += player.velX;
  if(globalX >= 0 && globalX <= max){
    for(var i = 0; i < maxTree; i++){
      tree[i].X -= player.velX; 
    }
    for(var i = 0; i < content.length; i++){
      content[i].X -= player.velX;
    }
    for(var i = 0; i < buttons.length; i++){
      buttons[i].X -= player.velX;
    }
  }
  else{
    if(globalX < 0){
      globalX = 0;
    }
    if(globalX > max){
      globalX = max;
    }
  }


//player.X += player.velX;
player.Y += player.velY;

//Movement
if(bigLeft){
  player.velX = -20;
}
else if(bigRight){
  player.velX = 20;
}
else if(isLeft){
  player.velX = -3;
}
else if(isRight){
  player.velX = 3;
}
else{
  player.velX = 0;
}

//Rendering
g.clearRect(0, 0, gameCanvas.width, gameCanvas.height);
g.drawImage(sun.img, maxWidth - maxWidth * globalX/max - size/2, -size/2, size, size);

for(var i = 0; i < maxBlock; i++){
  g.drawImage(block[i].img, i*maxWidth/maxBlock, Math.floor(factor*maxHeight), maxWidth/maxBlock, Math.floor((1 - factor)*maxHeight));
}

for(var i = 0; i < maxTree; i++){
  if(isIn(tree[i])){
    g.drawImage(tree[i].img, tree[i].X, Math.floor(factor*maxHeight) - size, size, size);
  }
}

g.drawImage(player.img, player.X, player.Y, player.W, player.H);

for(var i = 0; i < content.length; i++){
  if(isIn(content[i])){
    g.drawImage(content[i].img, content[i].X, content[i].Y, content[i].W, content[i].H);
  }
}

for(var i = 0; i < buttons.length; i++){
  if(isIn(buttons[i])){
    g.drawImage(buttons[i].img, buttons[i].X, buttons[i].Y, buttons[i].W, buttons[i].H);
  }
}

window.requestAnimationFrame(main);
}

function Object(image, x, y, width, height){
  this.img = new Image();
  this.img.src = image;
  this.img.height = height;
  this.img.width = width;

  this.X = x;
  this.Y = y;
  this.prev_X = x;
  this.prev_Y = y;
  this.velX = 0;
  this.velY = 0;
  this.W = width;
  this.H = height;

  //In case I want gravity
  this.G = 0;
  this.MG = 0;

  this.isColliding = function(obj){
    if((this.X <= obj.X + obj.W && this.X >= obj.X) || (this.X + this.W <= obj.X + obj.W && this.X + this.W >= obj.X)){
      if((this.Y <= obj.Y + obj.H && this.Y >= obj.Y) || (this.Y + this.H <= obj.Y + obj.H && this.Y + this.H >= obj.Y)){
        return true;
      }
    }
    return false;
  }
}

//Check mobile device
function checkMob(){
  if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){
    window.location.href = "http://noahfang.me/Spotify/broken.html";
  } 
}

//Goto Url
function goTo(url){
  var win = window.open(url, '_blank');
  win.focus();
}

//Function to get the mouse position
function mouseClicked(event){
  var rect = gameCanvas.getBoundingClientRect();
  var x = event.clientX - rect.left;
  var y = event.clientY - rect.top;
  
  if(isInside(x, y, instructions)){
    window.location.href = "http://noahfang.me/Spotify/Instructions/instructions.html";
  }
  else if(isInside(x, y, website)){
    var url = "http://noahfang.me";
    goTo(url);
  }  
  else if(isInside(x, y, again)){
    location.reload();
  } 
  else if(isInside(x, y, wrapped)){
    var url = "https://open.spotify.com/user/spotify/playlist/37i9dQZF1E9TyXTCtXGB8k";
    goTo(url);
  }
}
//Function to check whether a point is inside a rectangle
function isInside(x, y, rect){
  return x > rect.X && x < rect.X + rect.W && y < rect.Y + rect.H && y > rect.Y
}

</script>
